#include<iostream>
#include<algorithm>
using namespace std;
#define ll long long
void buildtree(int *arr,int* tree ,int start,int end,int treeNode)
{
    if(start==end){
        tree[treeNode]=arr[start];
        return;
    }
    int mid=(start+end)/2;
    buildtree(arr,tree,start,mid,treeNode*2);
    buildtree(arr,tree,mid+1,end,treeNode*2+1);

    tree[treeNode]=min(tree[2*treeNode],tree[2*treeNode+1]);

}
int query(int indx,int s,int e,int l,int r)
{
    if(s>l || e<r)return INT_MAX;

    if(s>=l && e<=r)return tree[indx];



    int mid=(start+end)/2;
    return min(query(2*indx,s,mid,)

}
int main()
{
    int n;
    cin>>n;
    int arr[n];
    int* tree=new int[2*n];
    for(int i=0;i<n;i++)
        cin>>arr[i];
    buildtree(arr,tree,0,n-1,1);




}
